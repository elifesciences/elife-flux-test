---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: adm
  annotations:
    fluxcd.io/automated: "true"
  forceUpgrade: "true"
  rollback:
    enable: "true"
    retry: "true"
    maxRetries: 1
    force: "true"

spec:
  chart:
    git: https://github.com/helm/charts
    path: stable/prometheus-operator
    ref: master
  values:
    defaultRules:
      rules:
        kubeScheduler: false  # lives on EKS
        kubeApiserver: false  # too memory intensive
    kubeControllerManager:
      enabled: false  # lives on EKS
    grafana:
      ingress:
        enabled: "true"
        hosts:
          - grafana--test-cluster.elifesciences.org
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "https://auth--test-cluster.elifesciences.org/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth--test-cluster.elifesciences.org/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
      env:
        GF_AUTH_ANONYMOUS_ENABLED: "true"
        GF_AUTH_ANONYMOUS_ORG_NAME: "Main Org."
        GF_AUTH_ANONYMOUS_ORG_ROLE: "Viewer"

    prometheus:
      ingress:
        enabled: "true"
        hosts:
          - prometheus--test-cluster.elifesciences.org
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "https://auth--test-cluster.elifesciences.org/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth--test-cluster.elifesciences.org/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
      prometheusSpec:
        serviceMonitorSelectorNilUsesHelmValues: false
        ruleSelector:
          matchExpressions:
            - {key: app, operator: In, values: [prometheus-operator, flux]}
        additionalScrapeConfigs:
          - job_name: 'kubernetes-ingresses'
            metrics_path: /probe
            params:
              module: [http_2xx]
            kubernetes_sd_configs:
            - role: ingress
            relabel_configs:
            # Example relabel to probe only some ingresses that have "example.io/should_be_probed = true" annotation
            #  - source_labels: [__meta_kubernetes_ingress_annotation_example_io_should_be_probed]
            #    action: keep
            #    regex: true
            - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]
              regex: (.+);(.+);(.+)
              replacement: ${1}://${2}${3}
              target_label: __param_target
            - target_label: __address__
              replacement: blackbox-exporter.example.com:9115
            - source_labels: [__param_target]
              target_label: instance
            - action: labelmap
              regex: __meta_kubernetes_ingress_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_ingress_name]
              target_label: kubernetes_name

    alertmanager:
      alertmanagerSpec:
        configSecret: alertmanager-prometheus-operator
      ingress:
        enabled: "true"
        hosts:
          - alertmanager--test-cluster.elifesciences.org
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "https://auth--test-cluster.elifesciences.org/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth--test-cluster.elifesciences.org/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
