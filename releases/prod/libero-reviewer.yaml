---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: libero-reviewer
  namespace: prod
  annotations:
    fluxcd.io/automated: "true"
    filter.fluxcd.io/submission: glob:master-*-*
    filter.fluxcd.io/client: glob:master-*-*
    filter.fluxcd.io/continuumAdaptor: glob:master-*-*

spec:
  releaseName: libero-reviewer--prod
  chart:
    git: https://github.com/libero/reviewer
    path: charts/libero-reviewer
    ref: chart-dev

  values:
    replicaCount: 1
    ingress:
      enabled: "true"
      host: reviewer--test-cluster.elifesciences.org
      annotations:
        kubernetes.io/ingress.class: nginx
      main:
        annotations:
          blackbox/should_be_probed: 'true'
      login:
        annotations:
          blackbox/should_be_probed: 'true'
      auth:
        annotations:
          blackbox/should_be_probed: 'true'

    postgresql:
      existingSecret: libero-reviewer--prod-postgresql

    authenticationJwtSecret: libero-reviewer--prod-auth-jwt

    submission:
      image:
        repository: liberoadmin/reviewer-submission
        tag: master-d9dab39c-20200623.1337
      sciencebeam:
        convertUrl: "http://sciencebeam--prod:8075/api/convert"
      s3:
        secret: libero-reviewer--prod-s3
        bucket: "staging-libero-reviewer"

    client:
      image:
        repository: liberoadmin/reviewer-client
        tag: master-7ca685f5-20200625.1114

    continuumAdaptor:
      image:
        repository: liberoadmin/continuum-adaptor
        tag: master-c32cf929-20200527.1606
      continuumApiUrl: "http://continuumtest--gateway.elife.internal"
      loginUrl: "https://continuumtest--cdn-journal.elifesciences.org/submit"
      elifeApiSecret: "libero-reviewer--prod-elife-api"
      continuumJwtSecret: "libero-reviewer--prod-continuum-journal-jwt"

    browsertests:
      runPostRelease: false
      testFixture: Minimal

---
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: reviewer-client
  namespace: prod
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: libero-reviewer--prod-client
  ingressRef:
    apiVersion: networking.k8s.io/v1beta1
    kind: Ingress
    name: libero-reviewer
  progressDeadlineSeconds: 900
  service:
    port: 9898
  analysis:
    interval: 1m
    threshold: 10
    maxWeight: 50
    stepWeight: 5
    metrics:
    - name: request-success-rate
      # minimum req success rate (non 5xx responses)
      # percentage (0-100)
      thresholdRange:
        min: 99
      interval: 1m
    # testing (optional)
    webhooks:
      - name: acceptance-test
        type: pre-rollout
        url: http://flagger-loadtester.test/
        timeout: 600s
        metadata:
          type: helmv3
          cmd: "test -n stg libero-reviewer--stg"
      - name: smoke-test
        type: pre-rollout
        url: http://flagger-loadtester.test/
        timeout: 600s
        metadata:
          type: helmv3
          cmd: "test -n prod libero-reviewer--prod"
      - name: stg-equals-prod-images
        type: pre-rollout
        url: http://flagger-loadtester.test/
        timeout: 600s
        metadata:
          type: bash
          cmd: >
            "diff <(helmv3 -n stg  get values libero-reviewer--stg  | grep 'tag: ' | sort)"
            "     <(helmv3 -n prod get values libero-reviewer--prod | grep 'tag: ' | sort)"
      - name: stg-equals-prod-chart
        type: pre-rollout
        url: http://flagger-loadtester.test/
        timeout: 600s
        metadata:
          type: bash
          cmd: >
            "diff <(helmv3 -n stg  list | grep reviewer | cut -f 6)"
            "     <(helmv3 -n prod list | grep reviewer | cut -f 6)"
