---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: mimir
  namespace: grafana

spec:
  interval: 1m
  timeout: 10m
  releaseName: mimir
  chart:
    spec:
      chart: mimir
      version: 5.3.0
      sourceRef:
        kind: HelmRepository
        name: grafana
      interval: 1m
  install:
    remediation:
      retries: 5

  values:
    mimir:
      structuredConfig:
        common:
          storage:
            backend: s3
            s3:
              region: ${aws_region}

    blocks_storage:
      s3:
        bucket_name: elife-${cluster_name}-grafana-mimir-blocks
    alertmanager_storage:
      s3:
        bucket_name: elife-${cluster_name}-grafana-mimir-alertmanager
    ruler_storage:
      s3:
        bucket_name: elife-${cluster_name}-grafana-mimir-ruler
    serviceAccount:
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::512686554592:role/elife-${cluster_name}-grafana-mimir-cluster-role

    alertmanager:
      persistentVolume:
        enabled: true
      replicas: 2
      resources:
        limits:
          memory: 1.4Gi
        requests:
          cpu: 1
          memory: 1Gi
      statefulSet:
        enabled: true

    compactor:
      persistentVolume:
        size: 20Gi
      resources:
        limits:
          memory: 2.1Gi
        requests:
          cpu: 1
          memory: 1.5Gi

    distributor:
      replicas: 2
      resources:
        limits:
          memory: 5.7Gi
        requests:
          cpu: 2
          memory: 4Gi

    ingester:
      persistentVolume:
        size: 50Gi
      replicas: 3
      resources:
        limits:
          memory: 12Gi
        requests:
          cpu: 3.5
          memory: 8Gi
      topologySpreadConstraints: {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - ingester
              topologyKey: 'kubernetes.io/hostname'

      zoneAwareReplication:
        topologyKey: 'kubernetes.io/hostname'

    admin-cache:
      enabled: true
      replicas: 2

    chunks-cache:
      enabled: true
      replicas: 2

    index-cache:
      enabled: true
      replicas: 3

    metadata-cache:
      enabled: true

    results-cache:
      enabled: true
      replicas: 2

    minio:
      enabled: false

    overrides_exporter:
      replicas: 1
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi

    querier:
      replicas: 1
      resources:
        limits:
          memory: 5.6Gi
        requests:
          cpu: 2
          memory: 4Gi

    query_frontend:
      replicas: 1
      resources:
        limits:
          memory: 2.8Gi
        requests:
          cpu: 2
          memory: 2Gi

    ruler:
      replicas: 1
      resources:
        limits:
          memory: 2.8Gi
        requests:
          cpu: 1
          memory: 2Gi

    store_gateway:
      persistentVolume:
        size: 10Gi
      replicas: 3
      resources:
        limits:
          memory: 2.1Gi
        requests:
          cpu: 1
          memory: 1.5Gi
      topologySpreadConstraints: {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - store-gateway
              topologyKey: 'kubernetes.io/hostname'
      zoneAwareReplication:
        topologyKey: 'kubernetes.io/hostname'

    nginx:
      replicas: 1
      resources:
        limits:
          memory: 731Mi
        requests:
          cpu: 1
          memory: 512Mi

    gateway:
      replicas: 1
      resources:
        limits:
          memory: 731Mi
        requests:
          cpu: 1
          memory: 512Mi
